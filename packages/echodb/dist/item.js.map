{"version":3,"sources":["../src/item.js"],"names":["ItemModel","constructor","view","console","assert","_view","meta","log","length","version","setMeta","updateItem","setTitle","title","obj","type","data","update","appendChange","message"],"mappings":";;;;;;;AAIA;;;;AAJA;AACA;AACA;AAIA;AACO,MAAMA,SAAN,CAAgB;AAErBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChBC,IAAAA,OAAO,CAACC,MAAR,CAAeF,IAAf;AACA,SAAKG,KAAL,GAAaH,IAAb;AACD;;AAED,MAAII,IAAJ,GAAW;AACT,QAAI;AAAEA,MAAAA;AAAF,QAAW,KAAKD,KAApB,CADS,CAGT;;AACA,QAAI,CAACC,IAAL,EAAW;AACT,UAAI,KAAKC,GAAL,CAASC,MAAb,EAAqB;AACnB,cAAM;AAAEC,UAAAA;AAAF,YAAc,KAAKF,GAAL,CAAS,CAAT,CAApB;AACAD,QAAAA,IAAI,GAAG;AACLG,UAAAA;AADK,SAAP;AAGD;AACF;;AAED,WAAOH,IAAI,IAAI,EAAf;AACD;;AAED,MAAIC,GAAJ,GAAU;AACR,WAAO,KAAKF,KAAL,CAAWE,GAAX,IAAkB,EAAzB;AACD;;AAEDG,EAAAA,OAAO,CAACJ,IAAD,EAAO;AACZ,WAAO,KAAKK,UAAL,CAAgB;AAAEL,MAAAA;AAAF,KAAhB,CAAP;AACD;;AAEDM,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,WAAO,KAAKF,UAAL,CAAgB;AAAEE,MAAAA;AAAF,KAAhB,CAAP;AACD,GAjCoB,CAmCrB;;;AACAF,EAAAA,UAAU,CAACG,GAAD,EAAM;AACd,UAAM;AAAEC,MAAAA,IAAF;AAAQF,MAAAA,KAAR;AAAeP,MAAAA;AAAf,QAAwB,KAAKD,KAAnC;AAEA,UAAMW,IAAI,GAAG,qBAAM;AAAED,MAAAA,IAAF;AAAQF,MAAAA,KAAR;AAAeP,MAAAA;AAAf,KAAN,EAA6BQ,GAA7B,CAAb;AAEA,WAAO,KAAKT,KAAL,CAAWY,MAAX,CAAkBD,IAAlB,CAAP;AACD;;AAEDE,EAAAA,YAAY,CAACC,OAAD,EAAU;AACpB,WAAO,KAAKd,KAAL,CAAWa,YAAX,CAAwBC,OAAxB,CAAP;AACD;;AA9CoB","sourcesContent":["//\n// Copyright 2019 Wireline, Inc.\n//\n\nimport merge from 'lodash.merge';\n\n// TODO(burdon): Bucket.\nexport class ItemModel {\n\n  constructor(view) {\n    console.assert(view);\n    this._view = view;\n  }\n\n  get meta() {\n    let { meta } = this._view;\n\n    // TODO(burdon): Hack, since item schems currently doesn't have `meta` field.\n    if (!meta) {\n      if (this.log.length) {\n        const { version } = this.log[0];\n        meta = {\n          version\n        };\n      }\n    }\n\n    return meta || {};\n  }\n\n  get log() {\n    return this._view.log || [];\n  }\n\n  setMeta(meta) {\n    return this.updateItem({ meta });\n  }\n\n  setTitle(title) {\n    return this.updateItem({ title });\n  }\n\n  // TODO(burdon): Update schema (add version, move type into meta, etc.)\n  updateItem(obj) {\n    const { type, title, meta } = this._view;\n\n    const data = merge({ type, title, meta }, obj);\n\n    return this._view.update(data);\n  }\n\n  appendChange(message) {\n    return this._view.appendChange(message);\n  }\n}\n"],"file":"item.js"}